#geodata-mode: true  # 启用 GeoIP 解析  filter中可使用以下3个参数  country 通过节点IP查询MaxMind数据库    city 需要liteip2city扩展数据库    asn 自治系统号 (AS12345)


# ===============订阅源配置 (核心部分)==============
proxy-providers:
  provider1:
    type: http
    path: ./huancun.yaml
    url: https://gh-proxy.com/https://raw.githubusercontent.com/2530ZZZ/free/refs/heads/main/mihomo.yaml
    interval: 3600          # 节点更新间隔(单位:秒)
    #filter: "(history_delay.avg < 800) && (bandwidth.download > 2)"  # 正确注释位置

    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204  # 基础检测URL
      initial-delay: 0            # 立即启动检测
      lazy: false                 # 禁用延迟初始化
      interval: 30               # 检测间隔(单位:秒)
      timeout: 2                  # 超时时间(单位:秒)
      passing-score: 0.7          # 通过分数(小数形式)

      # 批量检测参数
      concurrency: 
        batch: 999  # 每批检测数量
        interval: 0ms       # 批次间隔(单位:毫秒)  0代表无间隔连续测试

      #Start initial health checking的时候包含所有节点
      proxies:
        - include: ".*"           # 包含所有节点
        - exclude: "DIRECT|REJECT" # 排除直连/拒绝节点

      methods:
        - method: http        # 可用性检测
          url: "https://www.gstatic.com/generate_204"
          timeout: 1500ms     # 明确毫秒单位
          weight: 1         # 权重值(小数形式)

#        - method: speed       # 速度检测方法
#          download:           # 必须声明方向
#            url: "https://github.com/AaronFeng753/Waifu2x-Extension-GUI/releases/download/v2.21.12/Waifu2x-Extension-GUI-v2.21.12-Portable.7zp"
#            size: 5242880     # 5MB转换为字节
#            min: 209715       # 最低0.2MB/s 0.2MB/s转换为字节/s(209715=0.2*1024*1024)
#            threads: "{{ min(4, env.CPU_CORES) }}" # 动态线程数
#          timeout: 10s        # 统一秒单位
#          weight: 0.4

      # 存储优化
      storage-optimization:
        vacuum: auto          # 自动清理碎片
        compression-level: 3  # 有效值0-9


# ==============代理节点组(策略组)配置==================
proxy-groups:
  #主代理组
  - name: 🌐 PROXY
    type: select
    include-all: true
    proxies:
      - ⚖️ n来源-n代理-n目标
#      - ⚖️ n来源-1代理-1目标
#      - ⚖️ 1来源-1代理-1目标

  - name: ⚖️ n来源-n代理-n目标
    type: load-balance
    use: [provider1]                  # 复用provider的检查配置
    filter: > 
       health.healthy == true
    strategy: round-robin

#  - name: ⚖️ n来源-1代理-1目标
#    type: load-balance
#    use: [provider1]                  # 复用provider的检查配置
#    filter: > 
#       health.healthy == true && 
#       bandwidth.download > 0.1 && 
#       latency < 1000
#    strategy: consistent-hashing

#  - name: ⚖️ 1来源-1代理-1目标
#    type: load-balance
#    use: [provider1]                  # 复用provider的检查配置
#    filter: > 
#       health.healthy == true && 
#       bandwidth.download > 0.1 && 
#       latency < 1000
#    strategy: sticky-sessions

# =============== 规则系统 ================
rule-providers:
  # 🔒私有网络
  private:
    url: "https://gh-proxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/private.txt"
    path: ./rules/private.yaml
    behavior: domain          # 🎯域名匹配
    interval: 86400           # 🔄每日更新
    type: http                # ✅ 必须声明类型
    format: text              # 📜 显式声明文本格式
    strategy: DIRECT          # 强制直连下载规则文件
    health-check: false       # 当规则文件更新时 不触发 代理节点的健康检查 避免规则更新与节点检测产生循环依赖

  # 🇨🇳国内域名
  cn_domain:
    type: http         # ✅ 必须声明类型,type必须首行,下同
    behavior: domain
    url: "https://gh-proxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt"
    path: ./rules/cn_domain.yaml
    interval: 172800  # 🔄每2天更新
    format: text    # 📜 显式声明文本格式
    health-check: false       # 当规则文件更新时 不触发 代理节点的健康检查 避免规则更新与节点检测产生循环依赖

  # 🌍海外域名
  geolocation:
    type: http         # ✅ 必须声明类型
    behavior: domain
    url: "https://gh-proxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/proxy.txt"
    path: ./rules/geolocation.yaml
    interval: 86400
    format: text    # 📜 显式声明文本格式
    health-check: false       # 当规则文件更新时 不触发 代理节点的健康检查 避免规则更新与节点检测产生循环依赖

  # 🇨🇳国内IP
  cn_ip:
    type: http         # ✅ 必须声明类型
    behavior: ipcidr  # 🌐IP段匹配
    url: "https://gh-proxy.com/https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/cncidr.txt"
    path: ./rules/cn_ip.yaml
    interval: 259200  # 🔄3天更新
    format: text    # 📜 显式声明文本格式
    health-check: false       # 当规则文件更新时 不触发 代理节点的健康检查 避免规则更新与节点检测产生循环依赖

rules:
  - RULE-SET,private,DIRECT  # 🔒私有网络直连
  - GEOIP,CN,DIRECT  # 🇨🇳国内IP直连
  - RULE-SET,cn_domain,DIRECT  # 🏠国内域名
  - RULE-SET,cn_ip,DIRECT  # 🌐国内IP段
  - RULE-SET,geolocation,🌐 PROXY  # 🌍海外流量
  - MATCH,🌐 PROXY  # 🚦剩余流量代理